# Stage 1: Build with Composer
FROM php:8.4-apache AS build

ENV COMPOSER_ALLOW_SUPERUSER=1
ENV COMPOSER_NO_INTERACTION=1

# Install system dependencies and PHP extensions
RUN apt-get update && apt-get install -y \
    curl \
    unzip \
    git \
    libzip-dev \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
  && docker-php-ext-install pdo pdo_mysql bcmath \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

RUN a2enmod headers rewrite

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copy only composer files and app source
WORKDIR /app
COPY composer.json composer.lock /app/
COPY app/ /app/

# Install PHP dependencies into /app/vendor
RUN composer install --no-dev --optimize-autoloader --no-scripts --prefer-dist

# Stage 2: Runtime image
FROM php:8.3-apache

# Apache hardening
RUN a2enmod headers rewrite && \
    echo 'ServerTokens Prod' >> /etc/apache2/apache2.conf && \
    echo 'ServerSignature Off' >> /etc/apache2/apache2.conf

# PHP hardening
RUN echo 'expose_php = Off' > "$PHP_INI_DIR/conf.d/prod-php.ini"

# Install PHP extensions
RUN apt-get update && apt-get install -y \
    libzip-dev \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
  && docker-php-ext-install pdo pdo_mysql bcmath \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

# Use version-controlled php.ini for production
COPY docker/php.ini.prod /usr/local/etc/php/conf.d/99-custom-prod.ini

# Copy built application (including vendor/)
WORKDIR /var/www/html
COPY --from=build /app /var/www/html

# Set secure ownership
RUN chown -R www-data:www-data /var/www/html
